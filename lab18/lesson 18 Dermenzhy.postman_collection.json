{
	"info": {
		"_postman_id": "1eb9bc19-1b9d-47d4-8d56-c57a210c00c2",
		"name": "lesson 18",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30375123"
	},
	"item": [
		{
			"name": "positive",
			"item": [
				{
					"name": "create user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test #1: Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test #2: Created person name equals to the request body name\", function () {  ",
									"  const requestUserName = pm.variables.get(\"username\");",
									"  const responseUserName = pm.response.json().name;",
									"  pm.expect(responseUserName).to.eql(requestUserName);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{username}}\",\n    \"age\": {{user_age}},\n    \"gender\": \"female\",\n    \"city\": \"Odesa\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://em.staging.api.onereach.ai/http/1b3bebb7-e882-4f1e-a74b-ee381bfa69d6/users",
							"protocol": "https",
							"host": [
								"em",
								"staging",
								"api",
								"onereach",
								"ai"
							],
							"path": [
								"http",
								"1b3bebb7-e882-4f1e-a74b-ee381bfa69d6",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "edit user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test #1: Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test #2: Update user's gender\", function () {  ",
									"  const requestUserGender = \"male\";",
									"  const responseUserGender = pm.response.json().gender;",
									"  pm.expect(responseUserGender).to.eql(requestUserGender);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{user_id}}\",\n    \"name\": \"{{username}}\",\n    \"age\": {{user_age}},\n    \"gender\": \"male\",\n    \"city\": \"Odesa\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://em.staging.api.onereach.ai/http/1b3bebb7-e882-4f1e-a74b-ee381bfa69d6/users",
							"protocol": "https",
							"host": [
								"em",
								"staging",
								"api",
								"onereach",
								"ai"
							],
							"path": [
								"http",
								"1b3bebb7-e882-4f1e-a74b-ee381bfa69d6",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "get user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test #1: Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test #2: Person name is Kateryna\", function () {  ",
									"  const requestUserName = pm.variables.get(\"username\");",
									"  const responseUserName = pm.response.json().name;",
									"  pm.expect(responseUserName).to.eql(requestUserName);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://em.staging.api.onereach.ai/http/1b3bebb7-e882-4f1e-a74b-ee381bfa69d6/users?id={{user_id}}",
							"protocol": "https",
							"host": [
								"em",
								"staging",
								"api",
								"onereach",
								"ai"
							],
							"path": [
								"http",
								"1b3bebb7-e882-4f1e-a74b-ee381bfa69d6",
								"users"
							],
							"query": [
								{
									"key": "id",
									"value": "{{user_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test #1: Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test #2: Check response message\", function () { ",
									"  const expectedText = \"User is deleted\";",
									"  const responseText = pm.response.text();",
									"  pm.expect(responseText).to.include(expectedText);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://em.staging.api.onereach.ai/http/1b3bebb7-e882-4f1e-a74b-ee381bfa69d6/users?id={{user_id}}",
							"protocol": "https",
							"host": [
								"em",
								"staging",
								"api",
								"onereach",
								"ai"
							],
							"path": [
								"http",
								"1b3bebb7-e882-4f1e-a74b-ee381bfa69d6",
								"users"
							],
							"query": [
								{
									"key": "id",
									"value": "{{user_id}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "negative",
			"item": [
				{
					"name": "create user (negative)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test #1: Status code is 400\", function () {",
									"  pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Test #2: Check response error message\", function () { ",
									"  const expectedText = \"Validation error: name is invalid\";",
									"  const responseText = pm.response.text();",
									"  pm.expect(responseText).to.include(expectedText);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"age\": {{user_age}},\n    \"gender\": \"female\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://em.staging.api.onereach.ai/http/1b3bebb7-e882-4f1e-a74b-ee381bfa69d6/users",
							"protocol": "https",
							"host": [
								"em",
								"staging",
								"api",
								"onereach",
								"ai"
							],
							"path": [
								"http",
								"1b3bebb7-e882-4f1e-a74b-ee381bfa69d6",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "edit user (negative)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test #1: Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test #2: Update user's gender\", function () {  ",
									"  const requestUserGender = \"male\";",
									"  const responseUserGender = pm.response.json().gender;",
									"  pm.expect(responseUserGender).to.eql(requestUserGender);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{user_id}}\",\n    \"name\": 123,\n    \"age\": -1,\n    \"gender\": \"xxx\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://em.staging.api.onereach.ai/http/1b3bebb7-e882-4f1e-a74b-ee381bfa69d6/users",
							"protocol": "https",
							"host": [
								"em",
								"staging",
								"api",
								"onereach",
								"ai"
							],
							"path": [
								"http",
								"1b3bebb7-e882-4f1e-a74b-ee381bfa69d6",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "get user (negative)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test #1: Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test #2: Check response error message\", function () { ",
									"  const expectedText = \"No users found\";",
									"  const responseText = pm.response.text();",
									"  pm.expect(responseText).to.include(expectedText);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://em.staging.api.onereach.ai/http/1b3bebb7-e882-4f1e-a74b-ee381bfa69d6/users?id=xxx",
							"protocol": "https",
							"host": [
								"em",
								"staging",
								"api",
								"onereach",
								"ai"
							],
							"path": [
								"http",
								"1b3bebb7-e882-4f1e-a74b-ee381bfa69d6",
								"users"
							],
							"query": [
								{
									"key": "id",
									"value": "xxx"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete user (negative)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test #1: Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test #2: Check response error message\", function () { ",
									"  const expectedText = \"No user found\";",
									"  const responseText = pm.response.text();",
									"  pm.expect(responseText).to.include(expectedText);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://em.staging.api.onereach.ai/http/1b3bebb7-e882-4f1e-a74b-ee381bfa69d6/users?id=xxx",
							"protocol": "https",
							"host": [
								"em",
								"staging",
								"api",
								"onereach",
								"ai"
							],
							"path": [
								"http",
								"1b3bebb7-e882-4f1e-a74b-ee381bfa69d6",
								"users"
							],
							"query": [
								{
									"key": "id",
									"value": "xxx"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}